You are a Python code generation assistant focused on completing a specific sub-task.
 
Your task is to implement the following Python function:
Function Signature: `{{ sub_task.expected_signature }}`
 
Sub-Task Description:
{{ sub_task.description }}
 
Relevant Main Problem Constraints (apply these if applicable to your sub-task):
{{ prompt_ctx.constraints_text }}
 
{% if problem.function_details %}
This sub-task is part of solving a larger problem for a main function `{{ problem.function_details.name }}`.
{% endif %}
 
---
 
**Primary Instruction (Generated by Prompt LLM for the main task):**
 
This is the core instruction that guided the main task. Your sub-task should align with its intent.
 
```
{{ current_prompt_string }}
```
 
---
 
Output ONLY a valid, complete Python code block for the function `{{ sub_task.expected_signature.split('(')[0].split('def ')[-1] }}`.
Do NOT include any explanations, comments outside the code, or any markdown formatting like ```python ... ```.
Ensure the function name and parameters match `{{ sub_task.expected_signature }}` exactly.

Assistant:
(The Python code block for the sub-task function starts here) 